{"version":3,"file":"static/chunks/pages/chrome-devtools-bd476aee8e3eb9c8.js","mappings":"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","sources":["webpack://_N_E/?3181","webpack://_N_E/./src/pages/chrome-devtools.tsx","webpack://_N_E/<anon>"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/chrome-devtools\",\n      function () {\n        return require(\"private-next-pages/chrome-devtools.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/chrome-devtools\"])\n      });\n    }\n  ","import { Link, Stack } from \"@fluentui/react\";\r\nimport { makeStyles } from \"@griffel/react\";\r\nimport { AdbSocket } from \"@yume-chan/adb\";\r\nimport {\r\n    Consumable,\r\n    ReadableStreamDefaultReader,\r\n    WritableStreamDefaultWriter,\r\n} from \"@yume-chan/stream-extra\";\r\nimport {\r\n    Agent,\r\n    Client,\r\n    Duplex,\r\n    Pool,\r\n    Symbols,\r\n    WebSocket,\r\n    request,\r\n} from \"@yume-chan/undici-browser\";\r\nimport {\r\n    action,\r\n    makeAutoObservable,\r\n    observable,\r\n    reaction,\r\n    runInAction,\r\n} from \"mobx\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { NextPage } from \"next\";\r\nimport getConfig from \"next/config\";\r\nimport Head from \"next/head\";\r\nimport type { Socket } from \"node:net\";\r\nimport { useCallback, useEffect } from \"react\";\r\nimport { GLOBAL_STATE } from \"../state\";\r\nimport { RouteStackProps } from \"../utils\";\r\n\r\nclass AdbUndiciSocket extends Duplex {\r\n    private _socket: AdbSocket;\r\n    private _reader: ReadableStreamDefaultReader<Uint8Array>;\r\n    private _writer: WritableStreamDefaultWriter<Consumable<Uint8Array>>;\r\n\r\n    constructor(socket: AdbSocket) {\r\n        super();\r\n        this._socket = socket;\r\n        this._reader = this._socket.readable.getReader();\r\n        this._writer = this._socket.writable.getWriter();\r\n        this._reader.closed.then(() => this.emit(\"end\"));\r\n    }\r\n\r\n    async _read(size: number): Promise<void> {\r\n        try {\r\n            const result = await this._reader.read();\r\n            if (result.done) {\r\n                this.emit(\"end\");\r\n            } else {\r\n                this.push(result.value);\r\n            }\r\n        } catch {\r\n            //ignore\r\n        }\r\n    }\r\n\r\n    async _write(\r\n        chunk: any,\r\n        encoding: BufferEncoding,\r\n        callback: (error?: Error | null | undefined) => void\r\n    ): Promise<void> {\r\n        const consumable = new Consumable(chunk);\r\n        try {\r\n            await this._writer.write(consumable);\r\n            callback();\r\n        } catch (e) {\r\n            callback(e as Error);\r\n        }\r\n    }\r\n\r\n    async _destroy(\r\n        error: Error | null,\r\n        callback: (error: Error | null) => void\r\n    ): Promise<void> {\r\n        await this._socket.close();\r\n        callback(error);\r\n    }\r\n}\r\n\r\nconst agent = new Agent({\r\n    factory(origin, opts) {\r\n        const pool = new Pool(origin, {\r\n            ...opts,\r\n            factory(origin, opts) {\r\n                const client = new Client(origin, opts);\r\n                // Remote debugging validates `Host` header to defend against DNS rebinding attacks.\r\n                // But we can only pass socket name using hostname, so we need to override it.\r\n                (client as any)[Symbols.kHostHeader] = \"Host: localhost\\r\\n\";\r\n                return client;\r\n            },\r\n        });\r\n        return pool;\r\n    },\r\n    async connect(options, callback) {\r\n        try {\r\n            const socket = await GLOBAL_STATE.adb!.createSocket(\r\n                \"localabstract:\" + options.hostname\r\n            );\r\n            callback(null, new AdbUndiciSocket(socket) as unknown as Socket);\r\n        } catch (e) {\r\n            callback(e as Error, null);\r\n        }\r\n    },\r\n});\r\n\r\ninterface Page {\r\n    description: string;\r\n    devtoolsFrontendUrl: string;\r\n    id: string;\r\n    title: string;\r\n    type: string;\r\n    url: string;\r\n    webSocketDebuggerUrl: string;\r\n}\r\n\r\ninterface Version {\r\n    \"Android-Package\": string;\r\n    Browser: string;\r\n    \"Protocol-Version\": string;\r\n    \"User-Agent\": string;\r\n    \"V8-Version\": string;\r\n    \"WebKit-Version\": string;\r\n    webSocketDebuggerUrl: string;\r\n}\r\n\r\n// https://source.chromium.org/chromium/chromium/src/+/refs/heads/main:chrome/browser/devtools/device/devtools_device_discovery.cc;l=36;drc=4651cec294d1542d6673a89190e192e20de03240\r\n\r\nasync function getPages(socket: string) {\r\n    const response = await request(`http://${socket}/json`, {\r\n        dispatcher: agent,\r\n    });\r\n    const body = await response.body.json();\r\n    return body as Page[];\r\n}\r\n\r\nasync function getVersion(socket: string) {\r\n    const response = await request(`http://${socket}/json/version`, {\r\n        dispatcher: agent,\r\n    });\r\n    const body = await response.body.json();\r\n    return body as Version;\r\n}\r\n\r\nasync function focusPage(socket: string, page: Page) {\r\n    await request(`http://${socket}/json/activate/${page.id}`, {\r\n        dispatcher: agent,\r\n    });\r\n}\r\n\r\nasync function closePage(socket: string, page: Page) {\r\n    await request(`http://${socket}/json/close/${page.id}`, {\r\n        dispatcher: agent,\r\n    });\r\n}\r\n\r\nconst {\r\n    publicRuntimeConfig: { basePath },\r\n} = getConfig();\r\n\r\n// Use a fixed version from Chrome's distribution, updated regularly.\r\n// Opera: doesn't host its own frontend\r\n// Edge: only have versions for Canary version, have license issues\r\n// Brave: `frontendUrl` points to Google's but version number is invalid\r\nconst FRONTEND_SCRIPT =\r\n    \"https://chrome-devtools-frontend.appspot.com/serve_internal_file/@3c3641f7c28cf564edd441cc4ca2838b32c4e52a/front_end/entrypoints/inspector/inspector.js\";\r\n\r\nfunction getPopupParams(page: Page) {\r\n    const frontendUrl = page.devtoolsFrontendUrl;\r\n    const [, params] = frontendUrl.split(\"?\");\r\n    return {\r\n        script: FRONTEND_SCRIPT,\r\n        params,\r\n    };\r\n}\r\n\r\ninterface Browser {\r\n    socket: string;\r\n    version: Version;\r\n    pages: Page[];\r\n}\r\n\r\nconst STATE = makeAutoObservable(\r\n    {\r\n        browsers: [] as Browser[],\r\n        intervalId: null as NodeJS.Timeout | null,\r\n        visible: false,\r\n    },\r\n    {\r\n        browsers: observable.deep,\r\n    }\r\n);\r\n\r\nconst SOCKET_NAMES = [\r\n    \"@(.*)_devtools_remote(_\\\\d+)?\",\r\n    \"@com\\\\.opera\\\\.browser(\\\\.beta)?\\\\.devtools\",\r\n];\r\n\r\nconst GET_SOCKET_COMMAND = [\r\n    \"cat /proc/net/unix\",\r\n    `grep -E \"${SOCKET_NAMES.join(\"|\")}\"`,\r\n    \"awk '{print substr($8, 2)}'\",\r\n];\r\n\r\nasync function getBrowsers() {\r\n    const device = GLOBAL_STATE.adb!;\r\n    const sockets = await device.subprocess.spawnAndWaitLegacy(\r\n        GET_SOCKET_COMMAND.join(\" | \")\r\n    );\r\n    const browsers: Browser[] = [];\r\n    for (const socket of sockets.split(\"\\n\").filter(Boolean)) {\r\n        if (browsers.some((browser) => browser.socket == socket)) {\r\n            continue;\r\n        }\r\n\r\n        try {\r\n            const version = await getVersion(socket);\r\n            const pages = await getPages(socket);\r\n            console.log(socket, version, pages);\r\n            browsers.push({ socket, version, pages });\r\n        } catch (e) {\r\n            console.error(socket, e);\r\n        }\r\n    }\r\n    runInAction(() => {\r\n        STATE.browsers = browsers;\r\n    });\r\n}\r\n\r\nreaction(\r\n    () => [GLOBAL_STATE.adb, STATE.visible] as const,\r\n    ([device, visible]) => {\r\n        if (!device || !visible) {\r\n            STATE.browsers = [];\r\n            if (STATE.intervalId) {\r\n                clearInterval(STATE.intervalId);\r\n                STATE.intervalId = null;\r\n            }\r\n            return;\r\n        }\r\n\r\n        STATE.intervalId = setInterval(() => {\r\n            getBrowsers();\r\n        }, 5000);\r\n\r\n        getBrowsers();\r\n    }\r\n);\r\n\r\nconst PACKAGE_NAMES: Record<string, string | undefined> = {\r\n    \"com.android.chrome\": \"Google Chrome\",\r\n    \"com.chrome.beta\": \"Google Chrome Beta\",\r\n    \"com.chrome.dev\": \"Google Chrome Dev\",\r\n    \"com.chrome.canary\": \"Google Chrome Canary\",\r\n    \"com.microsoft.emmx\": \"Microsoft Edge\",\r\n    \"com.microsoft.emmx.beta\": \"Microsoft Edge Beta\",\r\n    \"com.microsoft.emmx.dev\": \"Microsoft Edge Dev\",\r\n    \"com.microsoft.emmx.canary\": \"Microsoft Edge Canary\",\r\n    \"com.opera.browser\": \"Opera\",\r\n    \"com.opera.browser.beta\": \"Opera Beta\",\r\n    \"com.vivaldi.browser\": \"Vivaldi\",\r\n};\r\n\r\nfunction getBrowserName(version: Version) {\r\n    const [, versionNumber] = version.Browser.split(\"/\");\r\n    const name =\r\n        PACKAGE_NAMES[version[\"Android-Package\"]] || version[\"Android-Package\"];\r\n    return `${name} (${versionNumber})`;\r\n}\r\n\r\nconst useClasses = makeStyles({\r\n    header: {\r\n        marginTop: \"4px\",\r\n        marginBottom: \"4px\",\r\n    },\r\n    url: {\r\n        marginLeft: \"8px\",\r\n        color: \"#999\",\r\n    },\r\n    link: {\r\n        marginRight: \"12px\",\r\n    },\r\n});\r\n\r\nconst ChromeDevToolsPage: NextPage = observer(function ChromeDevTools() {\r\n    const classes = useClasses();\r\n\r\n    useEffect(() => {\r\n        runInAction(() => {\r\n            STATE.visible = true;\r\n        });\r\n\r\n        return action(() => {\r\n            STATE.visible = false;\r\n        });\r\n    }, []);\r\n\r\n    const handleInspectClick = useCallback((socket: string, page: Page) => {\r\n        const { script, params } = getPopupParams(page);\r\n        const childWindow = window.open(\r\n            `${basePath}/chrome-devtools-frame?script=${script}&${params}`,\r\n            \"_blank\",\r\n            \"popup\"\r\n        )!;\r\n        childWindow.addEventListener(\"message\", (e) => {\r\n            if (\r\n                typeof e.data !== \"object\" ||\r\n                !\"type in e.data\" ||\r\n                e.data.type !== \"AdbWebSocket\"\r\n            ) {\r\n                return;\r\n            }\r\n\r\n            const url = new URL(e.data.url as string);\r\n            url.host = socket;\r\n\r\n            const port = e.ports[0];\r\n\r\n            const ws = new WebSocket(url, {\r\n                dispatcher: agent,\r\n            });\r\n            ws.binaryType = \"arraybuffer\";\r\n            ws.onopen = () => {\r\n                port.postMessage({ type: \"open\" });\r\n            };\r\n            ws.onclose = () => {\r\n                port.postMessage({ type: \"close\" });\r\n                port.close();\r\n            };\r\n            ws.onmessage = (e) => {\r\n                const { data } = e;\r\n                port.postMessage({\r\n                    type: \"message\",\r\n                    message: data,\r\n                });\r\n            };\r\n\r\n            port.onmessage = (e) => {\r\n                switch (e.data.type) {\r\n                    case \"message\":\r\n                        ws.send(e.data.message);\r\n                        break;\r\n                    case \"close\":\r\n                        ws.close();\r\n                        break;\r\n                }\r\n            };\r\n\r\n            childWindow.addEventListener(\"close\", () => {\r\n                ws.close();\r\n            });\r\n\r\n            globalThis.addEventListener(\"beforeunload\", () => {\r\n                port.postMessage({ type: \"close\" });\r\n                port.close();\r\n            });\r\n        });\r\n    }, []);\r\n\r\n    const handleFocusClick = useCallback((socket: string, page: Page) => {\r\n        focusPage(socket, page);\r\n    }, []);\r\n\r\n    const handleCloseClick = useCallback((socket: string, page: Page) => {\r\n        closePage(socket, page);\r\n        getBrowsers();\r\n    }, []);\r\n\r\n    return (\r\n        <Stack {...RouteStackProps}>\r\n            <Head>\r\n                <title>Chrome Remote Debugging - Tango</title>\r\n            </Head>\r\n\r\n            {STATE.browsers.length === 0 ? (\r\n                <>\r\n                    <h2>Supported browsers:</h2>\r\n                    <ul>\r\n                        <li>Google Chrome (stable/beta/dev/canary)</li>\r\n                        <li>Microsoft Edge (stable/beta/dev/canary)</li>\r\n                        <li>Opera (stable/beta)</li>\r\n                        <li>Vivaldi</li>\r\n                        <li>Any WebView with remote debugging on</li>\r\n                    </ul>\r\n                </>\r\n            ) : (\r\n                STATE.browsers.map((browser) => (\r\n                    <>\r\n                        {browser.version && (\r\n                            <h3 className={classes.header}>\r\n                                {getBrowserName(browser.version)}\r\n                            </h3>\r\n                        )}\r\n\r\n                        {browser.pages.map((page) => (\r\n                            <div key={page.id}>\r\n                                <div>\r\n                                    {page.title ? (\r\n                                        <span\r\n                                            dangerouslySetInnerHTML={{\r\n                                                __html: page.title,\r\n                                            }}\r\n                                        />\r\n                                    ) : (\r\n                                        <i>No Title</i>\r\n                                    )}\r\n\r\n                                    <span className={classes.url}>\r\n                                        {page.url || <i>No URL</i>}\r\n                                    </span>\r\n                                </div>\r\n                                <div>\r\n                                    <Link\r\n                                        className={classes.link}\r\n                                        onClick={() =>\r\n                                            handleInspectClick(\r\n                                                browser.socket,\r\n                                                page\r\n                                            )\r\n                                        }\r\n                                    >\r\n                                        Inspect\r\n                                    </Link>\r\n                                    <Link\r\n                                        className={classes.link}\r\n                                        onClick={() =>\r\n                                            handleFocusClick(\r\n                                                browser.socket,\r\n                                                page\r\n                                            )\r\n                                        }\r\n                                    >\r\n                                        Focus\r\n                                    </Link>\r\n                                    <Link\r\n                                        className={classes.link}\r\n                                        onClick={() =>\r\n                                            handleCloseClick(\r\n                                                browser.socket,\r\n                                                page\r\n                                            )\r\n                                        }\r\n                                    >\r\n                                        Close\r\n                                    </Link>\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n                    </>\r\n                ))\r\n            )}\r\n        </Stack>\r\n    );\r\n});\r\n\r\nexport default ChromeDevToolsPage;\r\n"],"names":["window","__NEXT_P","push","__webpack_require__","AdbUndiciSocket","Duplex","_read","size","result","_reader","read","done","emit","value","e","_write","chunk","encoding","callback","consumable","Consumable","_writer","write","_destroy","error","_socket","close","constructor","socket","readable","getReader","writable","getWriter","closed","then","agent","Agent","factory","origin","opts","pool","Pool","client","Client","Symbols","connect","options","GLOBAL_STATE","hostname","getPages","response","request","concat","dispatcher","body","json","getVersion","focusPage","page","id","closePage","publicRuntimeConfig","basePath","getConfig","STATE","makeAutoObservable","browsers","intervalId","visible","observable","GET_SOCKET_COMMAND","SOCKET_NAMES","getBrowsers","device","sockets","subprocess","spawnAndWaitLegacy","join","split","filter","Boolean","some","browser","version","pages","console","log","runInAction","reaction","param","clearInterval","setInterval","PACKAGE_NAMES","useClasses","makeStyles","header","marginTop","marginBottom","url","marginLeft","color","link","marginRight","ChromeDevToolsPage","observer","classes","useEffect","action","handleInspectClick","useCallback","script","params","getPopupParams","frontendUrl","devtoolsFrontendUrl","childWindow","open","addEventListener","data","type","URL","host","port","ports","ws","WebSocket","binaryType","onopen","postMessage","onclose","onmessage","message","send","globalThis","handleFocusClick","handleCloseClick","jsx_runtime","jsxs","Stack","RouteStackProps","jsx","Head","title","length","Fragment","h2","ul","li","map","h3","className","getBrowserName","versionNumber","Browser","name","div","span","dangerouslySetInnerHTML","__html","i","Link","onClick","chrome_devtools"],"sourceRoot":""}