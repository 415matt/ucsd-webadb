{"version":3,"file":"static/chunks/pages/logcat-5997a62e60ad65ee.js","mappings":"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","sources":["webpack://_N_E/?318b","webpack://_N_E/./src/components/command-bar-spacer-item.tsx","webpack://_N_E/./src/pages/logcat.tsx","webpack://_N_E/<anon>"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/logcat\",\n      function () {\n        return require(\"private-next-pages/logcat.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/logcat\"])\n      });\n    }\n  ","import { useEffect, useState } from \"react\";\r\n\r\nexport function CommandBarSpacerItem() {\r\n    const [container, setContainer] = useState<HTMLDivElement | null>(null);\r\n\r\n    useEffect(() => {\r\n        if (!container) {\r\n            return;\r\n        }\r\n\r\n        const parent = container.parentElement!;\r\n        const originalFlexGrow = parent.style.flexGrow;\r\n        parent.style.flexGrow = \"1\";\r\n        return () => {\r\n            parent.style.flexGrow = originalFlexGrow;\r\n        };\r\n    }, [container]);\r\n\r\n    return <div ref={setContainer} />;\r\n}\r\n","import {\r\n    ContextualMenuItemType,\r\n    ICommandBarItemProps,\r\n    Stack,\r\n    StackItem,\r\n    isMac,\r\n} from \"@fluentui/react\";\r\nimport { makeStyles, mergeClasses, shorthands } from \"@griffel/react\";\r\nimport {\r\n    AndroidLogEntry,\r\n    AndroidLogPriority,\r\n    Logcat,\r\n    LogcatFormat,\r\n} from \"@yume-chan/android-bin\";\r\nimport {\r\n    AbortController,\r\n    ReadableStream,\r\n    WritableStream,\r\n} from \"@yume-chan/stream-extra\";\r\nimport { encodeUtf8 } from \"@yume-chan/struct\";\r\nimport {\r\n    action,\r\n    autorun,\r\n    makeAutoObservable,\r\n    observable,\r\n    runInAction,\r\n} from \"mobx\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { NextPage } from \"next\";\r\nimport Head from \"next/head\";\r\nimport { KeyboardEvent, PointerEvent, useCallback } from \"react\";\r\n\r\nimport {\r\n    CommandBar,\r\n    Grid,\r\n    GridColumn,\r\n    GridHeaderProps,\r\n    GridRowProps,\r\n    ObservableListSelection,\r\n    isModKey,\r\n} from \"../components\";\r\nimport { CommandBarSpacerItem } from \"../components/command-bar-spacer-item\";\r\nimport { GLOBAL_STATE } from \"../state\";\r\nimport { Icons, RouteStackProps, saveFile, useStableCallback } from \"../utils\";\r\n\r\nconst LINE_HEIGHT = 32;\r\n\r\nconst useClasses = makeStyles({\r\n    grid: {\r\n        height: \"100%\",\r\n        marginLeft: \"-16px\",\r\n        marginRight: \"-16px\",\r\n    },\r\n    header: {\r\n        textAlign: \"center\",\r\n        lineHeight: `${LINE_HEIGHT}px`,\r\n    },\r\n    row: {\r\n        \"&:hover\": {\r\n            backgroundColor: \"#f3f2f1\",\r\n        },\r\n    },\r\n    selected: {\r\n        backgroundColor: \"#edebe9\",\r\n    },\r\n    code: {\r\n        fontFamily: \"monospace\",\r\n        textOverflow: \"ellipsis\",\r\n        whiteSpace: \"nowrap\",\r\n        lineHeight: LINE_HEIGHT + \"px\",\r\n        cursor: \"default\",\r\n        ...shorthands.overflow(\"hidden\"),\r\n    },\r\n    // Android Studio Classic Light theme\r\n    rowVerbose: {\r\n        color: \"#000000\",\r\n    },\r\n    rowDebug: {\r\n        color: \"#000000\",\r\n    },\r\n    rowInfo: {\r\n        color: \"#000000\",\r\n    },\r\n    rowWarn: {\r\n        color: \"#645607\",\r\n    },\r\n    rowError: {\r\n        color: \"#CD0000\",\r\n    },\r\n    rowFatal: {\r\n        color: \"#CD0000\",\r\n    },\r\n});\r\n\r\nexport interface Column extends GridColumn {\r\n    title: string;\r\n}\r\n\r\nexport interface LogRow extends AndroidLogEntry {\r\n    timeString?: string;\r\n}\r\n\r\nconst state = makeAutoObservable(\r\n    {\r\n        logcat: undefined as Logcat | undefined,\r\n        running: false,\r\n        buffer: [] as LogRow[],\r\n        flushRequested: false,\r\n        list: [] as LogRow[],\r\n        selection: new ObservableListSelection(),\r\n        count: 0,\r\n        stream: undefined as ReadableStream<AndroidLogEntry> | undefined,\r\n        stopSignal: undefined as AbortController | undefined,\r\n        animationFrameId: undefined as number | undefined,\r\n\r\n        format: LogcatFormat.ThreadTime,\r\n        formatModifierUid: false,\r\n        formatModifierTimezone: false,\r\n        formatTime: \"default\" as \"year\" | \"default\" | \"epoch\" | \"monotonic\",\r\n        formatNanosecond: \"millisecond\" as\r\n            | \"millisecond\"\r\n            | \"microsecond\"\r\n            | \"nanosecond\",\r\n\r\n        formatEntry(entry: LogRow) {\r\n            return entry.toString(this.format, {\r\n                uid: this.formatModifierUid,\r\n                year: this.formatTime === \"year\",\r\n                epoch: this.formatTime === \"epoch\",\r\n                monotonic: this.formatTime === \"monotonic\",\r\n                microseconds: this.formatNanosecond === \"microsecond\",\r\n                nanoseconds: this.formatNanosecond === \"nanosecond\",\r\n                timezone: this.formatModifierTimezone,\r\n            });\r\n        },\r\n\r\n        start() {\r\n            if (this.running) {\r\n                return;\r\n            }\r\n\r\n            // Logcat has its internal buffer,\r\n            // it will output all logs in the buffer when started.\r\n            // so clear the list before starting.\r\n            this.list = [];\r\n\r\n            this.running = true;\r\n            this.stream = this.logcat!.binary();\r\n            this.stopSignal = new AbortController();\r\n            this.stream\r\n                .pipeTo(\r\n                    new WritableStream({\r\n                        write: (chunk) => {\r\n                            this.buffer.push(chunk);\r\n                            if (!this.flushRequested) {\r\n                                this.flushRequested = true;\r\n                                requestAnimationFrame(this.flush);\r\n                            }\r\n                        },\r\n                    }),\r\n                    { signal: this.stopSignal.signal }\r\n                )\r\n                .catch((e) => {\r\n                    if (this.stopSignal?.signal.aborted) {\r\n                        return;\r\n                    }\r\n\r\n                    throw e;\r\n                });\r\n        },\r\n        flush() {\r\n            this.list.push(...this.buffer);\r\n            this.buffer = [];\r\n            this.flushRequested = false;\r\n        },\r\n        stop() {\r\n            this.running = false;\r\n            this.stopSignal!.abort();\r\n        },\r\n        clear() {\r\n            this.list = [];\r\n            this.selection.clear();\r\n        },\r\n        get empty() {\r\n            return this.list.length === 0;\r\n        },\r\n        get commandBar(): ICommandBarItemProps[] {\r\n            return [\r\n                this.running\r\n                    ? {\r\n                          key: \"stop\",\r\n                          text: \"Stop\",\r\n                          iconProps: { iconName: Icons.Stop },\r\n                          onClick: () => this.stop(),\r\n                      }\r\n                    : {\r\n                          key: \"start\",\r\n                          text: \"Start\",\r\n                          disabled: this.logcat === undefined,\r\n                          iconProps: { iconName: Icons.Play },\r\n                          onClick: () => this.start(),\r\n                      },\r\n                {\r\n                    key: \"clear\",\r\n                    text: \"Clear\",\r\n                    disabled: this.empty,\r\n                    iconProps: { iconName: Icons.Delete },\r\n                    onClick: () => this.clear(),\r\n                },\r\n                {\r\n                    key: \"select-all\",\r\n                    disabled: this.empty,\r\n                    iconProps: { iconName: Icons.Wand },\r\n                    text: \"Select All\",\r\n                    onClick: action(() => {\r\n                        this.selection.clear();\r\n                        this.selection.select(\r\n                            this.list.length - 1,\r\n                            false,\r\n                            true\r\n                        );\r\n                    }),\r\n                },\r\n                {\r\n                    key: \"copy\",\r\n                    text: \"Copy Selected\",\r\n                    disabled: this.selection.size === 0,\r\n                    iconProps: { iconName: Icons.Copy },\r\n                    onClick: () => {\r\n                        let text = \"\";\r\n                        for (const index of this.selection) {\r\n                            text += this.formatEntry(this.list[index]) + \"\\n\";\r\n                        }\r\n                        // Chrome on Windows can't copy null characters\r\n                        text = text.replace(/\\u0000/g, \"\");\r\n                        navigator.clipboard.writeText(text);\r\n                    },\r\n                },\r\n                {\r\n                    key: \"save\",\r\n                    text: \"Save Selected\",\r\n                    disabled: this.selection.size === 0,\r\n                    iconProps: { iconName: Icons.Save },\r\n                    onClick: () => {\r\n                        const stream = saveFile(`logcat.txt`);\r\n                        const writer = stream.getWriter();\r\n                        for (const index of this.selection) {\r\n                            writer.write(\r\n                                encodeUtf8(\r\n                                    this.formatEntry(this.list[index]) + \"\\n\"\r\n                                )\r\n                            );\r\n                        }\r\n                        writer.close();\r\n                    },\r\n                },\r\n\r\n                {\r\n                    // HACK: make CommandBar overflow on far items\r\n                    // https://github.com/microsoft/fluentui/issues/11842\r\n                    key: \"spacer\",\r\n                    onRender: () => <CommandBarSpacerItem />,\r\n                },\r\n                {\r\n                    // HACK: add a separator in CommandBar overflow menu\r\n                    // https://github.com/microsoft/fluentui/issues/10035\r\n                    key: \"separator\",\r\n                    disabled: true,\r\n                    itemType: ContextualMenuItemType.Divider,\r\n                },\r\n\r\n                {\r\n                    key: \"format\",\r\n                    iconProps: { iconName: Icons.TextGrammarSettings },\r\n                    text: \"Format\",\r\n                    subMenuProps: {\r\n                        items: [\r\n                            {\r\n                                key: \"format\",\r\n                                text: \"Format\",\r\n                                itemType: ContextualMenuItemType.Header,\r\n                            },\r\n                            {\r\n                                key: \"brief\",\r\n                                text: \"Brief\",\r\n                                canCheck: true,\r\n                                itemProps: {\r\n                                    radioGroup: \"format\",\r\n                                },\r\n                                checked: this.format === LogcatFormat.Brief,\r\n                                onClick: action((e) => {\r\n                                    e?.preventDefault();\r\n                                    e?.stopPropagation();\r\n                                    this.format = LogcatFormat.Brief;\r\n                                }),\r\n                            },\r\n                            {\r\n                                key: \"process\",\r\n                                text: \"Process\",\r\n                                canCheck: true,\r\n                                itemProps: {\r\n                                    radioGroup: \"format\",\r\n                                },\r\n                                checked: this.format === LogcatFormat.Process,\r\n                                onClick: action((e) => {\r\n                                    e?.preventDefault();\r\n                                    e?.stopPropagation();\r\n                                    this.format = LogcatFormat.Process;\r\n                                }),\r\n                            },\r\n                            {\r\n                                key: \"tag\",\r\n                                text: \"Tag\",\r\n                                canCheck: true,\r\n                                itemProps: {\r\n                                    radioGroup: \"format\",\r\n                                },\r\n                                checked: this.format === LogcatFormat.Tag,\r\n                                onClick: action((e) => {\r\n                                    e?.preventDefault();\r\n                                    e?.stopPropagation();\r\n                                    this.format = LogcatFormat.Tag;\r\n                                }),\r\n                            },\r\n                            {\r\n                                key: \"thread\",\r\n                                text: \"Thread\",\r\n                                canCheck: true,\r\n                                itemProps: {\r\n                                    radioGroup: \"format\",\r\n                                },\r\n                                checked: this.format === LogcatFormat.Thread,\r\n                                onClick: action((e) => {\r\n                                    e?.preventDefault();\r\n                                    e?.stopPropagation();\r\n                                    this.format = LogcatFormat.Thread;\r\n                                }),\r\n                            },\r\n                            {\r\n                                key: \"raw\",\r\n                                text: \"Raw\",\r\n                                canCheck: true,\r\n                                itemProps: {\r\n                                    radioGroup: \"format\",\r\n                                },\r\n                                checked: this.format === LogcatFormat.Raw,\r\n                                onClick: action((e) => {\r\n                                    e?.preventDefault();\r\n                                    e?.stopPropagation();\r\n                                    this.format = LogcatFormat.Raw;\r\n                                }),\r\n                            },\r\n                            {\r\n                                key: \"time\",\r\n                                text: \"Time\",\r\n                                canCheck: true,\r\n                                itemProps: {\r\n                                    radioGroup: \"format\",\r\n                                },\r\n                                checked: this.format === LogcatFormat.Time,\r\n                                onClick: action((e) => {\r\n                                    e?.preventDefault();\r\n                                    e?.stopPropagation();\r\n                                    this.format = LogcatFormat.Time;\r\n                                }),\r\n                            },\r\n                            {\r\n                                key: \"thread-time\",\r\n                                text: \"ThreadTime\",\r\n                                canCheck: true,\r\n                                itemProps: {\r\n                                    radioGroup: \"format\",\r\n                                },\r\n                                checked:\r\n                                    this.format === LogcatFormat.ThreadTime,\r\n                                onClick: action((e) => {\r\n                                    e?.preventDefault();\r\n                                    e?.stopPropagation();\r\n                                    this.format = LogcatFormat.ThreadTime;\r\n                                }),\r\n                            },\r\n                            {\r\n                                key: \"long\",\r\n                                text: \"Long\",\r\n                                canCheck: true,\r\n                                itemProps: {\r\n                                    radioGroup: \"format\",\r\n                                },\r\n                                checked: this.format === LogcatFormat.Long,\r\n                                onClick: action((e) => {\r\n                                    e?.preventDefault();\r\n                                    e?.stopPropagation();\r\n                                    this.format = LogcatFormat.Long;\r\n                                }),\r\n                            },\r\n\r\n                            {\r\n                                key: \"modifiers\",\r\n                                text: \"Modifiers\",\r\n                                itemType: ContextualMenuItemType.Header,\r\n                            },\r\n                            {\r\n                                key: \"uid\",\r\n                                text: \"UID\",\r\n                                canCheck: true,\r\n                                checked: this.formatModifierUid,\r\n                                onClick: action((e) => {\r\n                                    e?.preventDefault();\r\n                                    e?.stopPropagation();\r\n                                    this.formatModifierUid =\r\n                                        !this.formatModifierUid;\r\n                                }),\r\n                            },\r\n                            {\r\n                                key: \"timezone\",\r\n                                text: \"Timezone\",\r\n                                canCheck: true,\r\n                                checked: this.formatModifierTimezone,\r\n                                onClick: action((e) => {\r\n                                    e?.preventDefault();\r\n                                    e?.stopPropagation();\r\n                                    this.formatModifierTimezone =\r\n                                        !this.formatModifierTimezone;\r\n                                }),\r\n                            },\r\n\r\n                            {\r\n                                key: \"time-header\",\r\n                                text: \"Time Format\",\r\n                                itemType: ContextualMenuItemType.Header,\r\n                            },\r\n                            {\r\n                                key: \"default\",\r\n                                text: \"Default\",\r\n                                canCheck: true,\r\n                                itemProps: {\r\n                                    radioGroup: \"time\",\r\n                                },\r\n                                checked: this.formatTime === \"default\",\r\n                                onClick: action((e) => {\r\n                                    e?.preventDefault();\r\n                                    e?.stopPropagation();\r\n                                    this.formatTime = \"default\";\r\n                                }),\r\n                            },\r\n                            {\r\n                                key: \"year\",\r\n                                text: \"Year\",\r\n                                canCheck: true,\r\n                                itemProps: {\r\n                                    radioGroup: \"time\",\r\n                                },\r\n                                checked: this.formatTime === \"year\",\r\n                                onClick: action((e) => {\r\n                                    e?.preventDefault();\r\n                                    e?.stopPropagation();\r\n                                    this.formatTime = \"year\";\r\n                                }),\r\n                            },\r\n                            {\r\n                                key: \"epoch\",\r\n                                text: \"Epoch\",\r\n                                canCheck: true,\r\n                                itemProps: {\r\n                                    radioGroup: \"time\",\r\n                                },\r\n                                checked: this.formatTime === \"epoch\",\r\n                                onClick: action((e) => {\r\n                                    e?.preventDefault();\r\n                                    e?.stopPropagation();\r\n                                    this.formatTime = \"epoch\";\r\n                                }),\r\n                            },\r\n                            {\r\n                                key: \"monotonic\",\r\n                                text: \"Monotonic\",\r\n                                canCheck: true,\r\n                                itemProps: {\r\n                                    radioGroup: \"time\",\r\n                                },\r\n                                checked: this.formatTime === \"monotonic\",\r\n                                onClick: action((e) => {\r\n                                    e?.preventDefault();\r\n                                    e?.stopPropagation();\r\n                                    this.formatTime = \"monotonic\";\r\n                                }),\r\n                            },\r\n\r\n                            {\r\n                                key: \"nanosecondFormat\",\r\n                                text: \"Nanosecond Format\",\r\n                                itemType: ContextualMenuItemType.Header,\r\n                            },\r\n                            {\r\n                                key: \"millisecond\",\r\n                                text: \"Millisecond\",\r\n                                canCheck: true,\r\n                                itemProps: {\r\n                                    radioGroup: \"nanosecond\",\r\n                                },\r\n                                checked:\r\n                                    this.formatNanosecond === \"millisecond\",\r\n                                onClick: action((e) => {\r\n                                    e?.preventDefault();\r\n                                    e?.stopPropagation();\r\n                                    this.formatNanosecond = \"millisecond\";\r\n                                }),\r\n                            },\r\n                            {\r\n                                key: \"microsecond\",\r\n                                text: \"Microsecond\",\r\n                                canCheck: true,\r\n                                itemProps: {\r\n                                    radioGroup: \"nanosecond\",\r\n                                },\r\n                                checked:\r\n                                    this.formatNanosecond === \"microsecond\",\r\n                                onClick: action((e) => {\r\n                                    e?.preventDefault();\r\n                                    e?.stopPropagation();\r\n                                    this.formatNanosecond = \"microsecond\";\r\n                                }),\r\n                            },\r\n                            {\r\n                                key: \"nanosecond\",\r\n                                text: \"Nanosecond\",\r\n                                canCheck: true,\r\n                                itemProps: {\r\n                                    radioGroup: \"nanosecond\",\r\n                                },\r\n                                checked: this.formatNanosecond === \"nanosecond\",\r\n                                onClick: action((e) => {\r\n                                    e?.preventDefault();\r\n                                    e?.stopPropagation();\r\n                                    this.formatNanosecond = \"nanosecond\";\r\n                                }),\r\n                            },\r\n                        ],\r\n                    },\r\n                },\r\n            ];\r\n        },\r\n        get columns(): Column[] {\r\n            return [\r\n                {\r\n                    width: 200,\r\n                    title: \"Time\",\r\n                    CellComponent: ({\r\n                        rowIndex,\r\n                        columnIndex,\r\n                        className,\r\n                        ...rest\r\n                    }) => {\r\n                        const item = this.list[rowIndex];\r\n                        if (!item.timeString) {\r\n                            item.timeString = new Date(\r\n                                item.seconds * 1000\r\n                            ).toISOString();\r\n                        }\r\n\r\n                        const classes = useClasses();\r\n\r\n                        return (\r\n                            <div\r\n                                className={mergeClasses(\r\n                                    classes.code,\r\n                                    className\r\n                                )}\r\n                                {...rest}\r\n                            >\r\n                                {item.timeString}\r\n                            </div>\r\n                        );\r\n                    },\r\n                },\r\n                {\r\n                    width: 60,\r\n                    title: \"PID\",\r\n                    CellComponent: ({\r\n                        rowIndex,\r\n                        columnIndex,\r\n                        className,\r\n                        ...rest\r\n                    }) => {\r\n                        const item = this.list[rowIndex];\r\n\r\n                        const classes = useClasses();\r\n\r\n                        return (\r\n                            <div\r\n                                className={mergeClasses(\r\n                                    classes.code,\r\n                                    className\r\n                                )}\r\n                                {...rest}\r\n                            >\r\n                                {item.pid}\r\n                            </div>\r\n                        );\r\n                    },\r\n                },\r\n                {\r\n                    width: 60,\r\n                    title: \"TID\",\r\n                    CellComponent: ({\r\n                        rowIndex,\r\n                        columnIndex,\r\n                        className,\r\n                        ...rest\r\n                    }) => {\r\n                        const item = this.list[rowIndex];\r\n\r\n                        const classes = useClasses();\r\n\r\n                        return (\r\n                            <div\r\n                                className={mergeClasses(\r\n                                    classes.code,\r\n                                    className\r\n                                )}\r\n                                {...rest}\r\n                            >\r\n                                {item.tid}\r\n                            </div>\r\n                        );\r\n                    },\r\n                },\r\n                {\r\n                    width: 80,\r\n                    title: \"Priority\",\r\n                    CellComponent: ({\r\n                        rowIndex,\r\n                        columnIndex,\r\n                        className,\r\n                        ...rest\r\n                    }) => {\r\n                        const item = this.list[rowIndex];\r\n\r\n                        const classes = useClasses();\r\n\r\n                        return (\r\n                            <div\r\n                                className={mergeClasses(\r\n                                    classes.code,\r\n                                    className\r\n                                )}\r\n                                {...rest}\r\n                            >\r\n                                {AndroidLogPriority[item.priority]}\r\n                            </div>\r\n                        );\r\n                    },\r\n                },\r\n                {\r\n                    width: 300,\r\n                    title: \"Tag\",\r\n                    CellComponent: ({\r\n                        rowIndex,\r\n                        columnIndex,\r\n                        className,\r\n                        ...rest\r\n                    }) => {\r\n                        const item = this.list[rowIndex];\r\n\r\n                        const classes = useClasses();\r\n\r\n                        return (\r\n                            <div\r\n                                className={mergeClasses(\r\n                                    classes.code,\r\n                                    className\r\n                                )}\r\n                                {...rest}\r\n                            >\r\n                                {item.tag}\r\n                            </div>\r\n                        );\r\n                    },\r\n                },\r\n                {\r\n                    width: 300,\r\n                    flexGrow: 1,\r\n                    title: \"Message\",\r\n                    CellComponent: ({\r\n                        rowIndex,\r\n                        columnIndex,\r\n                        className,\r\n                        ...rest\r\n                    }) => {\r\n                        const item = this.list[rowIndex];\r\n                        const classes = useClasses();\r\n\r\n                        return (\r\n                            <div\r\n                                className={mergeClasses(\r\n                                    classes.code,\r\n                                    className\r\n                                )}\r\n                                {...rest}\r\n                            >\r\n                                {item.message}\r\n                            </div>\r\n                        );\r\n                    },\r\n                },\r\n            ];\r\n        },\r\n    },\r\n    {\r\n        buffer: false,\r\n        list: observable.shallow,\r\n        flush: action.bound,\r\n    }\r\n);\r\n\r\nautorun(() => {\r\n    if (GLOBAL_STATE.adb) {\r\n        runInAction(() => {\r\n            state.logcat = new Logcat(GLOBAL_STATE.adb!);\r\n        });\r\n    } else {\r\n        runInAction(() => {\r\n            state.logcat = undefined;\r\n            if (state.running) {\r\n                state.stop();\r\n            }\r\n        });\r\n    }\r\n});\r\n\r\nconst Header = observer(function Header({\r\n    className,\r\n    columnIndex,\r\n    ...rest\r\n}: GridHeaderProps) {\r\n    const classes = useClasses();\r\n\r\n    return (\r\n        <div className={mergeClasses(className, classes.header)} {...rest}>\r\n            {state.columns[columnIndex].title}\r\n        </div>\r\n    );\r\n});\r\n\r\nconst PRIORITY_COLORS: Record<\r\n    AndroidLogPriority,\r\n    keyof ReturnType<typeof useClasses>\r\n> = {\r\n    [AndroidLogPriority.Default]: \"rowVerbose\",\r\n    [AndroidLogPriority.Unknown]: \"rowVerbose\",\r\n    [AndroidLogPriority.Silent]: \"rowVerbose\",\r\n    [AndroidLogPriority.Verbose]: \"rowVerbose\",\r\n    [AndroidLogPriority.Debug]: \"rowDebug\",\r\n    [AndroidLogPriority.Info]: \"rowInfo\",\r\n    [AndroidLogPriority.Warn]: \"rowWarn\",\r\n    [AndroidLogPriority.Error]: \"rowError\",\r\n    [AndroidLogPriority.Fatal]: \"rowFatal\",\r\n};\r\n\r\nconst Row = observer(function Row({\r\n    className,\r\n    rowIndex,\r\n    ...rest\r\n}: GridRowProps) {\r\n    const classes = useClasses();\r\n\r\n    const handlePointerDown = useStableCallback(\r\n        action((e: PointerEvent<HTMLDivElement>) => {\r\n            if (e.shiftKey) {\r\n                e.preventDefault();\r\n            }\r\n            state.selection.select(rowIndex, isModKey(e), e.shiftKey);\r\n        })\r\n    );\r\n\r\n    return (\r\n        <div\r\n            className={mergeClasses(\r\n                className,\r\n                classes.row,\r\n                state.selection.has(rowIndex) && classes.selected,\r\n                classes[PRIORITY_COLORS[state.list[rowIndex]!.priority]]\r\n            )}\r\n            onPointerDown={handlePointerDown}\r\n            {...rest}\r\n        />\r\n    );\r\n});\r\n\r\nconst LogcatPage: NextPage = () => {\r\n    const classes = useClasses();\r\n\r\n    const handleKeyDown = useCallback((e: KeyboardEvent<HTMLDivElement>) => {\r\n        if ((isMac() ? e.metaKey : e.ctrlKey) && e.code === \"KeyA\") {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n            state.selection.clear();\r\n            state.selection.select(state.list.length - 1, false, true);\r\n            return;\r\n        }\r\n\r\n        if (e.code === \"Escape\") {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n            state.selection.clear();\r\n            return;\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <Stack {...RouteStackProps}>\r\n            <Head>\r\n                <title>Logcat - Tango</title>\r\n            </Head>\r\n\r\n            <CommandBar items={state.commandBar} />\r\n\r\n            <StackItem grow>\r\n                <Grid\r\n                    className={classes.grid}\r\n                    rowCount={state.list.length}\r\n                    rowHeight={LINE_HEIGHT}\r\n                    columns={state.columns}\r\n                    HeaderComponent={Header}\r\n                    RowComponent={Row}\r\n                    onKeyDown={handleKeyDown}\r\n                />\r\n            </StackItem>\r\n        </Stack>\r\n    );\r\n};\r\n\r\nexport default observer(LogcatPage);\r\n"],"names":["window","__NEXT_P","push","__webpack_require__","CommandBarSpacerItem","container","setContainer","useState","useEffect","parent","parentElement","originalFlexGrow","style","flexGrow","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsx","div","ref","useClasses","makeStyles","grid","height","marginLeft","marginRight","header","textAlign","lineHeight","concat","row","backgroundColor","selected","code","fontFamily","textOverflow","whiteSpace","LINE_HEIGHT","cursor","shorthands","rowVerbose","color","rowDebug","rowInfo","rowWarn","rowError","rowFatal","state","makeAutoObservable","logcat","undefined","running","buffer","flushRequested","list","selection","ObservableListSelection","count","stream","stopSignal","animationFrameId","format","LogcatFormat","formatModifierUid","formatModifierTimezone","formatTime","formatNanosecond","formatEntry","entry","toString","uid","year","epoch","monotonic","microseconds","nanoseconds","timezone","start","binary","AbortController","pipeTo","WritableStream","write","chunk","requestAnimationFrame","flush","signal","catch","_this_stopSignal","aborted","e","stop","abort","clear","empty","length","commandBar","key","text","iconProps","iconName","Icons","onClick","disabled","action","select","size","index","replace","navigator","clipboard","writeText","saveFile","writer","getWriter","encodeUtf8","close","onRender","itemType","ContextualMenuItemType","subMenuProps","items","canCheck","itemProps","radioGroup","checked","preventDefault","stopPropagation","columns","width","title","CellComponent","rowIndex","columnIndex","className","rest","param","item","timeString","Date","seconds","toISOString","classes","mergeClasses","pid","tid","AndroidLogPriority","priority","tag","message","observable","autorun","GLOBAL_STATE","runInAction","Logcat","Header","observer","PRIORITY_COLORS","Row","handlePointerDown","useStableCallback","shiftKey","isModKey","has","onPointerDown","LogcatPage","handleKeyDown","useCallback","isMac","metaKey","ctrlKey","jsxs","Stack","RouteStackProps","Head","CommandBar","StackItem","grow","Grid","rowCount","rowHeight","HeaderComponent","RowComponent","onKeyDown","__webpack_exports__"],"sourceRoot":""}